// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?  @db.VarChar(100)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
}

model Client {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  email        String   @unique @db.VarChar(100)
  phone        String?  @db.VarChar(20)
  registeredAt DateTime @default(now())
  orders       Order[]
}

model Order {
  id       Int           @id @default(autoincrement())
  clientId Int
  date     DateTime      @default(now())
  total    Float
  client   Client        @relation(fields: [clientId], references: [id])
  details  OrderDetail[]

  @@index([clientId])
}

model Product {
  id        Int           @id @default(autoincrement())
  name      String        @db.VarChar(150)
  price     Float
  stock     Int           @default(0)
  active    Boolean       @default(true)
  createdAt DateTime      @default(now())
  details   OrderDetail[]
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  subtotal  Float
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
  @@index([orderId])
  @@index([productId])
}

enum Role {
  USER
  ADMIN
}
